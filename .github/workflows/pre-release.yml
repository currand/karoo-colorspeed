name: Pre-Release Build

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  push:
    # This workflow will now only be triggered on direct pushes to any branch EXCEPT 'master'.
    # This is for general CI/testing on feature branches. The 'Create Release' step will not run here.
    branches: [ "!master" ]
    # This workflow will still be triggered when a tag matching the '*-pre-release' pattern is pushed.
    # When triggered by a tag, 'actions/checkout' will checkout the commit associated with that tag.
    tags: [ "*-pre-release" ]
  pull_request:
    # Keeping this if you want CI/CD checks for pull requests targeting the 'master' branch.
    # The 'Create Release' step will NOT run for PRs, as it's conditional on tags.
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating a GitHub Release
    steps:
    - name: Extract tag name
      # This step only runs if the workflow was triggered by a tag push.
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Set up environment variables
      # These environment variables are set for the entire job.
      run: |
        echo "GPR_USER=${{ github.actor }}" >> $GITHUB_ENV
        echo "GPR_KEY=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
        echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
        echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
        echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
        echo "KEYSTORE_BASE64=${{ secrets.KEYSTORE_BASE64 }}" >> $GITHUB_ENV
        echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

    - uses: actions/checkout@v4
      # This action checks out the code.
      # If triggered by a tag, it checks out the exact commit the tag points to.
      # If triggered by a branch push, it checks out that branch.

    # NEW STEP: Check if the tagged commit is already on the master branch
    - name: Check if tagged commit is on master branch
      id: check_master_tag
      # This step only runs if the workflow was triggered by a tag push.
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        # Fetch all remote branches to ensure 'git branch --contains' has full context
        # This is crucial for accurately checking if the commit is on origin/master.
        git fetch origin --prune

        # Check if the commit pointed to by the tag (${{ github.sha }}) is contained within 'origin/master'.
        # If 'origin/master' contains the commit, it means the tagged code is already part of the master branch's history.
        if git branch -r --contains ${{ github.sha }} | grep -q "origin/master"; then
          echo "IS_ON_MASTER=true" >> $GITHUB_ENV
          echo "Tagged commit ${{ github.sha }} IS on origin/master. A release will NOT be created."
        else
          echo "IS_ON_MASTER=false" >> $GITHUB_ENV
          echo "Tagged commit ${{ github.sha }} is NOT on origin/master. A release WILL be created."
        fi
      # This environment variable (IS_ON_MASTER) will be used in the 'Create Release' step's condition.

    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build

    - name: Archive APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: app/build/outputs/apk/release/app-release.apk

    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      # IMPORTANT: The release will now ONLY be created if:
      # 1. The workflow was triggered by a tag (startsWith(github.ref, 'refs/tags/'))
      # 2. AND the commit pointed to by that tag is NOT already on the 'master' branch (env.IS_ON_MASTER == 'false').
      if: startsWith(github.ref, 'refs/tags/') && env.IS_ON_MASTER == 'false'
      with:
        name: ${{ github.ref_name }}
        prerelease: true
        generateReleaseNotes: true
        artifacts: app/build/outputs/apk/release/app-release.apk, app/manifest.json, config_screen.png, config_screen2.png, example1.png, example2.png, example3.png, example4.png
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
